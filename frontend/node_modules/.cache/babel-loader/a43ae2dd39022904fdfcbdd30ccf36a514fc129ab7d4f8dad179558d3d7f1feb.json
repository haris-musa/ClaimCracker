{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isObject } from \"tsparticles-engine\";\nexport var CircleDrawer = /*#__PURE__*/function () {\n  function CircleDrawer() {\n    _classCallCheck(this, CircleDrawer);\n  }\n  _createClass(CircleDrawer, [{\n    key: \"draw\",\n    value: function draw(context, particle, radius) {\n      if (!particle.circleRange) {\n        particle.circleRange = {\n          min: 0,\n          max: Math.PI * 2\n        };\n      }\n      var circleRange = particle.circleRange;\n      context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n  }, {\n    key: \"getSidesCount\",\n    value: function getSidesCount() {\n      return 12;\n    }\n  }, {\n    key: \"particleInit\",\n    value: function particleInit(container, particle) {\n      var _shapeData$angle;\n      var shapeData = particle.shapeData,\n        angle = (_shapeData$angle = shapeData === null || shapeData === void 0 ? void 0 : shapeData.angle) !== null && _shapeData$angle !== void 0 ? _shapeData$angle : {\n          max: 360,\n          min: 0\n        };\n      particle.circleRange = !isObject(angle) ? {\n        min: 0,\n        max: angle * Math.PI / 180\n      } : {\n        min: angle.min * Math.PI / 180,\n        max: angle.max * Math.PI / 180\n      };\n    }\n  }]);\n  return CircleDrawer;\n}();","map":{"version":3,"names":["isObject","CircleDrawer","_classCallCheck","_createClass","key","value","draw","context","particle","radius","circleRange","min","max","Math","PI","arc","getSidesCount","particleInit","container","_shapeData$angle","shapeData","angle"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-shape-circle/esm/CircleDrawer.js"],"sourcesContent":["import { isObject } from \"tsparticles-engine\";\r\nexport class CircleDrawer {\r\n    draw(context, particle, radius) {\r\n        if (!particle.circleRange) {\r\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\r\n        }\r\n        const circleRange = particle.circleRange;\r\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\r\n    }\r\n    getSidesCount() {\r\n        return 12;\r\n    }\r\n    particleInit(container, particle) {\r\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\r\n            max: 360,\r\n            min: 0,\r\n        };\r\n        particle.circleRange = !isObject(angle)\r\n            ? {\r\n                min: 0,\r\n                max: (angle * Math.PI) / 180,\r\n            }\r\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,WAAaC,YAAY;EAAA,SAAAA,aAAA;IAAAC,eAAA,OAAAD,YAAA;EAAA;EAAAE,YAAA,CAAAF,YAAA;IAAAG,GAAA;IAAAC,KAAA,EACrB,SAAAC,KAAKC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MAC5B,IAAI,CAACD,QAAQ,CAACE,WAAW,EAAE;QACvBF,QAAQ,CAACE,WAAW,GAAG;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAEC,IAAI,CAACC,EAAE,GAAG;QAAE,CAAC;MACvD;MACA,IAAMJ,WAAW,GAAGF,QAAQ,CAACE,WAAW;MACxCH,OAAO,CAACQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEN,MAAM,EAAEC,WAAW,CAACC,GAAG,EAAED,WAAW,CAACE,GAAG,EAAE,KAAK,CAAC;IACtE;EAAC;IAAAR,GAAA;IAAAC,KAAA,EACD,SAAAW,cAAA,EAAgB;MACZ,OAAO,EAAE;IACb;EAAC;IAAAZ,GAAA;IAAAC,KAAA,EACD,SAAAY,aAAaC,SAAS,EAAEV,QAAQ,EAAE;MAAA,IAAAW,gBAAA;MAC9B,IAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAS;QAAEC,KAAK,IAAAF,gBAAA,GAAGC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,KAAK,cAAAF,gBAAA,cAAAA,gBAAA,GAAI;UAC9DP,GAAG,EAAE,GAAG;UACRD,GAAG,EAAE;QACT,CAAC;MACDH,QAAQ,CAACE,WAAW,GAAG,CAACV,QAAQ,CAACqB,KAAK,CAAC,GACjC;QACEV,GAAG,EAAE,CAAC;QACNC,GAAG,EAAGS,KAAK,GAAGR,IAAI,CAACC,EAAE,GAAI;MAC7B,CAAC,GACC;QAAEH,GAAG,EAAGU,KAAK,CAACV,GAAG,GAAGE,IAAI,CAACC,EAAE,GAAI,GAAG;QAAEF,GAAG,EAAGS,KAAK,CAACT,GAAG,GAAGC,IAAI,CAACC,EAAE,GAAI;MAAI,CAAC;IAChF;EAAC;EAAA,OAAAb,YAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}