{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport var Interactivity = /*#__PURE__*/function () {\n  function Interactivity(engine, container) {\n    _classCallCheck(this, Interactivity);\n    this.detectsOn = \"window\";\n    this.events = new Events();\n    this.modes = new Modes(engine, container);\n  }\n  _createClass(Interactivity, [{\n    key: \"detect_on\",\n    get: function get() {\n      return this.detectsOn;\n    },\n    set: function set(value) {\n      this.detectsOn = value;\n    }\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      var _data$detectsOn;\n      if (!data) {\n        return;\n      }\n      var detectsOn = (_data$detectsOn = data.detectsOn) !== null && _data$detectsOn !== void 0 ? _data$detectsOn : data.detect_on;\n      if (detectsOn !== undefined) {\n        this.detectsOn = detectsOn;\n      }\n      this.events.load(data.events);\n      this.modes.load(data.modes);\n    }\n  }]);\n  return Interactivity;\n}();","map":{"version":3,"names":["Events","Modes","Interactivity","engine","container","_classCallCheck","detectsOn","events","modes","_createClass","key","get","set","value","load","data","_data$detectsOn","detect_on","undefined"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js"],"sourcesContent":["import { Events } from \"./Events/Events\";\r\nimport { Modes } from \"./Modes/Modes\";\r\nexport class Interactivity {\r\n    constructor(engine, container) {\r\n        this.detectsOn = \"window\";\r\n        this.events = new Events();\r\n        this.modes = new Modes(engine, container);\r\n    }\r\n    get detect_on() {\r\n        return this.detectsOn;\r\n    }\r\n    set detect_on(value) {\r\n        this.detectsOn = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const detectsOn = data.detectsOn ?? data.detect_on;\r\n        if (detectsOn !== undefined) {\r\n            this.detectsOn = detectsOn;\r\n        }\r\n        this.events.load(data.events);\r\n        this.modes.load(data.modes);\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,SAASC,KAAK,QAAQ,eAAe;AACrC,WAAaC,aAAa;EACtB,SAAAA,cAAYC,MAAM,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAH,aAAA;IAC3B,IAAI,CAACI,SAAS,GAAG,QAAQ;IACzB,IAAI,CAACC,MAAM,GAAG,IAAIP,MAAM,CAAC,CAAC;IAC1B,IAAI,CAACQ,KAAK,GAAG,IAAIP,KAAK,CAACE,MAAM,EAAEC,SAAS,CAAC;EAC7C;EAACK,YAAA,CAAAP,aAAA;IAAAQ,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAgB;MACZ,OAAO,IAAI,CAACL,SAAS;IACzB,CAAC;IAAAM,GAAA,EACD,SAAAA,IAAcC,KAAK,EAAE;MACjB,IAAI,CAACP,SAAS,GAAGO,KAAK;IAC1B;EAAC;IAAAH,GAAA;IAAAG,KAAA,EACD,SAAAC,KAAKC,IAAI,EAAE;MAAA,IAAAC,eAAA;MACP,IAAI,CAACD,IAAI,EAAE;QACP;MACJ;MACA,IAAMT,SAAS,IAAAU,eAAA,GAAGD,IAAI,CAACT,SAAS,cAAAU,eAAA,cAAAA,eAAA,GAAID,IAAI,CAACE,SAAS;MAClD,IAAIX,SAAS,KAAKY,SAAS,EAAE;QACzB,IAAI,CAACZ,SAAS,GAAGA,SAAS;MAC9B;MACA,IAAI,CAACC,MAAM,CAACO,IAAI,CAACC,IAAI,CAACR,MAAM,CAAC;MAC7B,IAAI,CAACC,KAAK,CAACM,IAAI,CAACC,IAAI,CAACP,KAAK,CAAC;IAC/B;EAAC;EAAA,OAAAN,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}