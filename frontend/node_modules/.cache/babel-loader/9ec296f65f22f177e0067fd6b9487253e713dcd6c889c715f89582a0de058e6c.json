{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\ClaimCracker-1.0\\\\ClaimCracker\\\\frontend\\\\src\\\\components\\\\OneWayTypingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OneWayTypingAnimation = ({\n  text = \"\",\n  typeSpeed = 150\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const [charIndex, setCharIndex] = useState(0);\n  const [cursorVisible, setCursorVisible] = useState(true);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible(v => !v);\n    }, 500);\n    return () => clearInterval(cursorInterval);\n  }, []);\n  useEffect(() => {\n    if (typeof text !== \"string\" || text.length === 0) {\n      return; // Exit if text is not a string or is empty\n    }\n\n    if (charIndex < text.length) {\n      const timerId = setTimeout(() => {\n        setDisplayedText(prev => prev + text.charAt(charIndex));\n        setCharIndex(prev => prev + 1);\n      }, typeSpeed);\n      return () => clearTimeout(timerId);\n    }\n  }, [charIndex, text, typeSpeed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing\",\n    children: [displayedText, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"typing-cursor\",\n      style: {\n        opacity: cursorVisible ? 1 : 0\n      },\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(OneWayTypingAnimation, \"Qb0gKqn0CCDWQlWAInzvvdJZrSc=\");\n_c = OneWayTypingAnimation;\nexport default OneWayTypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"OneWayTypingAnimation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","OneWayTypingAnimation","text","typeSpeed","_s","displayedText","setDisplayedText","charIndex","setCharIndex","cursorVisible","setCursorVisible","cursorInterval","setInterval","v","clearInterval","length","timerId","setTimeout","prev","charAt","clearTimeout","className","children","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/src/components/OneWayTypingAnimation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst OneWayTypingAnimation = ({ text = \"\", typeSpeed = 150 }) => {\r\n  const [displayedText, setDisplayedText] = useState(\"\");\r\n  const [charIndex, setCharIndex] = useState(0);\r\n  const [cursorVisible, setCursorVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const cursorInterval = setInterval(() => {\r\n      setCursorVisible((v) => !v);\r\n    }, 500);\r\n    return () => clearInterval(cursorInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (typeof text !== \"string\" || text.length === 0) {\r\n      return; // Exit if text is not a string or is empty\r\n    }\r\n\r\n    if (charIndex < text.length) {\r\n      const timerId = setTimeout(() => {\r\n        setDisplayedText((prev) => prev + text.charAt(charIndex));\r\n        setCharIndex((prev) => prev + 1);\r\n      }, typeSpeed);\r\n\r\n      return () => clearTimeout(timerId);\r\n    }\r\n  }, [charIndex, text, typeSpeed]);\r\n\r\n  return (\r\n    <span className=\"typing\">\r\n      {displayedText}\r\n      <span\r\n        className=\"typing-cursor\"\r\n        style={{ opacity: cursorVisible ? 1 : 0 }}\r\n      >\r\n        |\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default OneWayTypingAnimation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC,IAAI,GAAG,EAAE;EAAEC,SAAS,GAAG;AAAI,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvCF,gBAAgB,CAAEG,CAAC,IAAK,CAACA,CAAC,CAAC;IAC7B,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMC,aAAa,CAACH,cAAc,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACd,IAAI,OAAOK,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACa,MAAM,KAAK,CAAC,EAAE;MACjD,OAAO,CAAC;IACV;;IAEA,IAAIR,SAAS,GAAGL,IAAI,CAACa,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BX,gBAAgB,CAAEY,IAAI,IAAKA,IAAI,GAAGhB,IAAI,CAACiB,MAAM,CAACZ,SAAS,CAAC,CAAC;QACzDC,YAAY,CAAEU,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAClC,CAAC,EAAEf,SAAS,CAAC;MAEb,OAAO,MAAMiB,YAAY,CAACJ,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAACT,SAAS,EAAEL,IAAI,EAAEC,SAAS,CAAC,CAAC;EAEhC,oBACEH,OAAA;IAAMqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,GACrBjB,aAAa,eACdL,OAAA;MACEqB,SAAS,EAAC,eAAe;MACzBE,KAAK,EAAE;QAAEC,OAAO,EAAEf,aAAa,GAAG,CAAC,GAAG;MAAE,CAAE;MAAAa,QAAA,EAC3C;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACxB,EAAA,CAtCIH,qBAAqB;AAAA4B,EAAA,GAArB5B,qBAAqB;AAwC3B,eAAeA,qBAAqB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}