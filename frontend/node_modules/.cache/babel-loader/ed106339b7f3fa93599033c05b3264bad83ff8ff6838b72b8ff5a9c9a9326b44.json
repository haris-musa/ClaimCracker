{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nvar qTreeCapacity = 4;\nvar qTreeRectangle = function qTreeRectangle(canvasSize) {\n  return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2);\n};\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    var _this = this;\n    _classCallCheck(this, Particles);\n    this._applyDensity = function (options, manualCount, group) {\n      var _options$number$densi;\n      if (!((_options$number$densi = options.number.density) !== null && _options$number$densi !== void 0 && _options$number$densi.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = _this._initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(_this.count, _this.filter(function (t) {\n          return t.group === group;\n        }).length);\n      _this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        _this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        _this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    };\n    this._initDensityFactor = function (densityOptions) {\n      var container = _this._container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    };\n    this._pushParticle = function (position, overrideOptions, group, initializer) {\n      try {\n        var particle = _this.pool.pop();\n        if (particle) {\n          particle.init(_this._nextId, position, overrideOptions, group);\n        } else {\n          particle = new Particle(_this._engine, _this._nextId, _this._container, position, overrideOptions, group);\n        }\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        _this._array.push(particle);\n        _this._zArray.push(particle);\n        _this._nextId++;\n        _this._engine.dispatchEvent(\"particleAdded\", {\n          container: _this._container,\n          data: {\n            particle: particle\n          }\n        });\n        return particle;\n      } catch (e) {\n        getLogger().warning(\"\".concat(errorPrefix, \" adding particle: \").concat(e));\n        return;\n      }\n    };\n    this._removeParticle = function (index, group, override) {\n      var particle = _this._array[index];\n      if (!particle || particle.group !== group) {\n        return false;\n      }\n      particle.destroy(override);\n      var zIdx = _this._zArray.indexOf(particle);\n      _this._array.splice(index, 1);\n      _this._zArray.splice(zIdx, 1);\n      _this.pool.push(particle);\n      _this._engine.dispatchEvent(\"particleRemoved\", {\n        container: _this._container,\n        data: {\n          particle: particle\n        }\n      });\n      return true;\n    };\n    this._engine = engine;\n    this._container = container;\n    this._nextId = 0;\n    this._array = [];\n    this._zArray = [];\n    this.pool = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this._interactionManager = new InteractionManager(engine, container);\n    var canvasSize = container.canvas.size;\n    this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this._array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this._container,\n        options = container.actualOptions;\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this._container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._array = [];\n      this._zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._array = [];\n      this._zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delta) {\n        var container, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              container = this._container;\n              container.canvas.clear();\n              _context.next = 4;\n              return this.update(delta);\n            case 4:\n              _iterator2 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                  container.canvas.drawPlugin(plugin, delta);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              _iterator3 = _createForOfIteratorHelper(this._zArray);\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  p = _step3.value;\n                  p.draw(delta);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"filter\",\n    value: function filter(condition) {\n      return this._array.filter(condition);\n    }\n  }, {\n    key: \"find\",\n    value: function find(condition) {\n      return this._array.find(condition);\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this._interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var container = this._container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this._interactionManager.init();\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this._interactionManager.init();\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            pathGenerator = _step5$value[1];\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_groupOptions$number = groupOptions.number) === null || _groupOptions$number === void 0 ? void 0 : _groupOptions$number.value) && i < options.particles.number.value; i++, j++) {\n            var _groupOptions$number;\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.clear();\n              this.init();\n              _context2.next = 4;\n              return this.draw({\n                value: 0,\n                factor: 0\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (index < 0 || index > this.count) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        this._removeParticle(i--, group, override) && deleted++;\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this._container.actualOptions,\n        groups = options.particles.groups;\n      for (var group in groups) {\n        this._applyDensity(groups[group], 0, group);\n      }\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _this$pool, checkDelete, _iterator9, _step9, _particle, _iterator12, _step12, updater, zArray;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              container = this._container, particlesToDelete = new Set();\n              this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n              _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                  pathGenerator.update();\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n              _iterator7 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                  plugin.update && plugin.update(delta);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n              _iterator8 = _createForOfIteratorHelper(this._array);\n              _context3.prev = 7;\n              _iterator8.s();\n            case 9:\n              if ((_step8 = _iterator8.n()).done) {\n                _context3.next = 42;\n                break;\n              }\n              particle = _step8.value;\n              resizeFactor = container.canvas.resizeFactor;\n              if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n              }\n              particle.ignoresResizeRatio = false;\n              _context3.next = 16;\n              return this._interactionManager.reset(particle);\n            case 16:\n              _iterator10 = _createForOfIteratorHelper(this._container.plugins);\n              _context3.prev = 17;\n              _iterator10.s();\n            case 19:\n              if ((_step10 = _iterator10.n()).done) {\n                _context3.next = 26;\n                break;\n              }\n              _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n              if (!particle.destroyed) {\n                _context3.next = 23;\n                break;\n              }\n              return _context3.abrupt(\"break\", 26);\n            case 23:\n              if (_plugin.particleUpdate) {\n                _plugin.particleUpdate(particle, delta);\n              }\n            case 24:\n              _context3.next = 19;\n              break;\n            case 26:\n              _context3.next = 31;\n              break;\n            case 28:\n              _context3.prev = 28;\n              _context3.t0 = _context3[\"catch\"](17);\n              _iterator10.e(_context3.t0);\n            case 31:\n              _context3.prev = 31;\n              _iterator10.f();\n              return _context3.finish(31);\n            case 34:\n              _iterator11 = _createForOfIteratorHelper(this.movers);\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  mover = _step11.value;\n                  mover.isEnabled(particle) && mover.move(particle, delta);\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n              if (!particle.destroyed) {\n                _context3.next = 39;\n                break;\n              }\n              particlesToDelete.add(particle);\n              return _context3.abrupt(\"continue\", 40);\n            case 39:\n              this.quadTree.insert(new Point(particle.getPosition(), particle));\n            case 40:\n              _context3.next = 9;\n              break;\n            case 42:\n              _context3.next = 47;\n              break;\n            case 44:\n              _context3.prev = 44;\n              _context3.t1 = _context3[\"catch\"](7);\n              _iterator8.e(_context3.t1);\n            case 47:\n              _context3.prev = 47;\n              _iterator8.f();\n              return _context3.finish(47);\n            case 50:\n              if (particlesToDelete.size) {\n                checkDelete = function checkDelete(p) {\n                  return !particlesToDelete.has(p);\n                };\n                this._array = this.filter(checkDelete);\n                this._zArray = this._zArray.filter(checkDelete);\n                (_this$pool = this.pool).push.apply(_this$pool, _toConsumableArray(particlesToDelete));\n              }\n              _context3.next = 53;\n              return this._interactionManager.externalInteract(delta);\n            case 53:\n              _iterator9 = _createForOfIteratorHelper(this._array);\n              _context3.prev = 54;\n              _iterator9.s();\n            case 56:\n              if ((_step9 = _iterator9.n()).done) {\n                _context3.next = 65;\n                break;\n              }\n              _particle = _step9.value;\n              _iterator12 = _createForOfIteratorHelper(this.updaters);\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  updater = _step12.value;\n                  updater.update(_particle, delta);\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n              if (!(!_particle.destroyed && !_particle.spawning)) {\n                _context3.next = 63;\n                break;\n              }\n              _context3.next = 63;\n              return this._interactionManager.particlesInteract(_particle, delta);\n            case 63:\n              _context3.next = 56;\n              break;\n            case 65:\n              _context3.next = 70;\n              break;\n            case 67:\n              _context3.prev = 67;\n              _context3.t2 = _context3[\"catch\"](54);\n              _iterator9.e(_context3.t2);\n            case 70:\n              _context3.prev = 70;\n              _iterator9.f();\n              return _context3.finish(70);\n            case 73:\n              delete container.canvas.resizeFactor;\n              if (this.needsSort) {\n                zArray = this._zArray;\n                zArray.sort(function (a, b) {\n                  return b.position.z - a.position.z || a.id - b.id;\n                });\n                this.lastZIndex = zArray[zArray.length - 1].position.z;\n                this.needsSort = false;\n              }\n            case 75:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[7, 44, 47, 50], [17, 28, 31, 34], [54, 67, 70, 73]]);\n      }));\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }]);\n  return Particles;\n}();","map":{"version":3,"names":["getLogger","getPosition","InteractionManager","Particle","Point","QuadTree","Rectangle","errorPrefix","qTreeCapacity","qTreeRectangle","canvasSize","width","height","Particles","engine","container","_this","_classCallCheck","_applyDensity","options","manualCount","group","_options$number$densi","number","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","value","optParticlesLimit","limit","particlesNumber","Math","min","particlesCount","count","filter","t","length","push","abs","undefined","removeQuantity","densityOptions","_container","canvas","element","pxRatio","retina","pixelRatio","factor","pow","area","_pushParticle","position","overrideOptions","initializer","particle","pool","pop","init","_nextId","_engine","canAdd","_array","_zArray","dispatchEvent","data","e","warning","concat","_removeParticle","index","override","destroy","zIdx","indexOf","splice","needsSort","lastZIndex","_interactionManager","size","quadTree","movers","plugins","getMovers","updaters","getUpdaters","_createClass","key","get","addManualParticles","actualOptions","_iterator","_createForOfIteratorHelper","manualParticles","_step","s","n","done","addParticle","err","f","particles","countToRemove","clear","_draw","_asyncToGenerator","_regeneratorRuntime","mark","_callee","delta","_iterator2","_step2","_step2$value","plugin","_iterator3","_step3","p","wrap","_callee$","_context","prev","next","update","_slicedToArray","drawPlugin","draw","stop","_x","apply","arguments","condition","find","handleClickMode","mode","handled","_iterator4","_step4","_step4$value","particlesInitialization","_iterator5","pathGenerators","_step5","_step5$value","pathGenerator","groups","groupOptions","i","j","_groupOptions$number","nb","mouse","pushing","_redraw","_callee2","_callee2$","_context2","redraw","remove","removeAt","quantity","deleted","setDensity","_update","_callee3","particlesToDelete","_iterator6","_step6","_step6$value","_iterator7","_step7","_step7$value","_iterator8","_step8","resizeFactor","_iterator10","_step10","_step10$value","_plugin","_iterator11","_step11","mover","_this$pool","checkDelete","_iterator9","_step9","_particle","_iterator12","_step12","updater","zArray","_callee3$","_context3","Set","ignoresResizeRatio","x","y","initialPosition","reset","destroyed","abrupt","particleUpdate","t0","finish","isEnabled","move","add","insert","t1","has","_toConsumableArray","externalInteract","spawning","particlesInteract","t2","sort","a","b","z","id","_x2"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["import { getLogger, getPosition } from \"../Utils/Utils\";\r\nimport { InteractionManager } from \"./Utils/InteractionManager\";\r\nimport { Particle } from \"./Particle\";\r\nimport { Point } from \"./Utils/Point\";\r\nimport { QuadTree } from \"./Utils/QuadTree\";\r\nimport { Rectangle } from \"./Utils/Rectangle\";\r\nimport { errorPrefix } from \"./Utils/Constants\";\r\nconst qTreeCapacity = 4;\r\nconst qTreeRectangle = (canvasSize) => {\r\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\r\n};\r\nexport class Particles {\r\n    constructor(engine, container) {\r\n        this._applyDensity = (options, manualCount, group) => {\r\n            if (!options.number.density?.enable) {\r\n                return;\r\n            }\r\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\r\n            this.limit = numberOptions.limit * densityFactor;\r\n            if (particlesCount < particlesNumber) {\r\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\r\n            }\r\n            else if (particlesCount > particlesNumber) {\r\n                this.removeQuantity(particlesCount - particlesNumber, group);\r\n            }\r\n        };\r\n        this._initDensityFactor = (densityOptions) => {\r\n            const container = this._container;\r\n            if (!container.canvas.element || !densityOptions.enable) {\r\n                return 1;\r\n            }\r\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\r\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\r\n        };\r\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\r\n            try {\r\n                let particle = this.pool.pop();\r\n                if (particle) {\r\n                    particle.init(this._nextId, position, overrideOptions, group);\r\n                }\r\n                else {\r\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\r\n                }\r\n                let canAdd = true;\r\n                if (initializer) {\r\n                    canAdd = initializer(particle);\r\n                }\r\n                if (!canAdd) {\r\n                    return;\r\n                }\r\n                this._array.push(particle);\r\n                this._zArray.push(particle);\r\n                this._nextId++;\r\n                this._engine.dispatchEvent(\"particleAdded\", {\r\n                    container: this._container,\r\n                    data: {\r\n                        particle,\r\n                    },\r\n                });\r\n                return particle;\r\n            }\r\n            catch (e) {\r\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\r\n                return;\r\n            }\r\n        };\r\n        this._removeParticle = (index, group, override) => {\r\n            const particle = this._array[index];\r\n            if (!particle || particle.group !== group) {\r\n                return false;\r\n            }\r\n            particle.destroy(override);\r\n            const zIdx = this._zArray.indexOf(particle);\r\n            this._array.splice(index, 1);\r\n            this._zArray.splice(zIdx, 1);\r\n            this.pool.push(particle);\r\n            this._engine.dispatchEvent(\"particleRemoved\", {\r\n                container: this._container,\r\n                data: {\r\n                    particle,\r\n                },\r\n            });\r\n            return true;\r\n        };\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this._nextId = 0;\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this.pool = [];\r\n        this.limit = 0;\r\n        this.needsSort = false;\r\n        this.lastZIndex = 0;\r\n        this._interactionManager = new InteractionManager(engine, container);\r\n        const canvasSize = container.canvas.size;\r\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\r\n        this.movers = this._engine.plugins.getMovers(container, true);\r\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    addManualParticles() {\r\n        const container = this._container, options = container.actualOptions;\r\n        for (const particle of options.manualParticles) {\r\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\r\n        }\r\n    }\r\n    addParticle(position, overrideOptions, group, initializer) {\r\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\r\n        if (limit > 0) {\r\n            const countToRemove = this.count + 1 - limit;\r\n            if (countToRemove > 0) {\r\n                this.removeQuantity(countToRemove);\r\n            }\r\n        }\r\n        return this._pushParticle(position, overrideOptions, group, initializer);\r\n    }\r\n    clear() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n    }\r\n    destroy() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this.movers = [];\r\n        this.updaters = [];\r\n    }\r\n    async draw(delta) {\r\n        const container = this._container;\r\n        container.canvas.clear();\r\n        await this.update(delta);\r\n        for (const [, plugin] of container.plugins) {\r\n            container.canvas.drawPlugin(plugin, delta);\r\n        }\r\n        for (const p of this._zArray) {\r\n            p.draw(delta);\r\n        }\r\n    }\r\n    filter(condition) {\r\n        return this._array.filter(condition);\r\n    }\r\n    find(condition) {\r\n        return this._array.find(condition);\r\n    }\r\n    handleClickMode(mode) {\r\n        this._interactionManager.handleClickMode(mode);\r\n    }\r\n    init() {\r\n        const container = this._container, options = container.actualOptions;\r\n        this.lastZIndex = 0;\r\n        this.needsSort = false;\r\n        let handled = false;\r\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\r\n        this._interactionManager.init();\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.particlesInitialization !== undefined) {\r\n                handled = plugin.particlesInitialization();\r\n            }\r\n            if (handled) {\r\n                break;\r\n            }\r\n        }\r\n        this._interactionManager.init();\r\n        for (const [, pathGenerator] of container.pathGenerators) {\r\n            pathGenerator.init(container);\r\n        }\r\n        this.addManualParticles();\r\n        if (!handled) {\r\n            for (const group in options.particles.groups) {\r\n                const groupOptions = options.particles.groups[group];\r\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\r\n                    this.addParticle(undefined, groupOptions, group);\r\n                }\r\n            }\r\n            for (let i = this.count; i < options.particles.number.value; i++) {\r\n                this.addParticle();\r\n            }\r\n        }\r\n    }\r\n    push(nb, mouse, overrideOptions, group) {\r\n        this.pushing = true;\r\n        for (let i = 0; i < nb; i++) {\r\n            this.addParticle(mouse?.position, overrideOptions, group);\r\n        }\r\n        this.pushing = false;\r\n    }\r\n    async redraw() {\r\n        this.clear();\r\n        this.init();\r\n        await this.draw({ value: 0, factor: 0 });\r\n    }\r\n    remove(particle, group, override) {\r\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\r\n    }\r\n    removeAt(index, quantity = 1, group, override) {\r\n        if (index < 0 || index > this.count) {\r\n            return;\r\n        }\r\n        let deleted = 0;\r\n        for (let i = index; deleted < quantity && i < this.count; i++) {\r\n            this._removeParticle(i--, group, override) && deleted++;\r\n        }\r\n    }\r\n    removeQuantity(quantity, group) {\r\n        this.removeAt(0, quantity, group);\r\n    }\r\n    setDensity() {\r\n        const options = this._container.actualOptions, groups = options.particles.groups;\r\n        for (const group in groups) {\r\n            this._applyDensity(groups[group], 0, group);\r\n        }\r\n        this._applyDensity(options.particles, options.manualParticles.length);\r\n    }\r\n    async update(delta) {\r\n        const container = this._container, particlesToDelete = new Set();\r\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\r\n        for (const [, pathGenerator] of container.pathGenerators) {\r\n            pathGenerator.update();\r\n        }\r\n        for (const [, plugin] of container.plugins) {\r\n            plugin.update && plugin.update(delta);\r\n        }\r\n        for (const particle of this._array) {\r\n            const resizeFactor = container.canvas.resizeFactor;\r\n            if (resizeFactor && !particle.ignoresResizeRatio) {\r\n                particle.position.x *= resizeFactor.width;\r\n                particle.position.y *= resizeFactor.height;\r\n                particle.initialPosition.x *= resizeFactor.width;\r\n                particle.initialPosition.y *= resizeFactor.height;\r\n            }\r\n            particle.ignoresResizeRatio = false;\r\n            await this._interactionManager.reset(particle);\r\n            for (const [, plugin] of this._container.plugins) {\r\n                if (particle.destroyed) {\r\n                    break;\r\n                }\r\n                if (plugin.particleUpdate) {\r\n                    plugin.particleUpdate(particle, delta);\r\n                }\r\n            }\r\n            for (const mover of this.movers) {\r\n                mover.isEnabled(particle) && mover.move(particle, delta);\r\n            }\r\n            if (particle.destroyed) {\r\n                particlesToDelete.add(particle);\r\n                continue;\r\n            }\r\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\r\n        }\r\n        if (particlesToDelete.size) {\r\n            const checkDelete = (p) => !particlesToDelete.has(p);\r\n            this._array = this.filter(checkDelete);\r\n            this._zArray = this._zArray.filter(checkDelete);\r\n            this.pool.push(...particlesToDelete);\r\n        }\r\n        await this._interactionManager.externalInteract(delta);\r\n        for (const particle of this._array) {\r\n            for (const updater of this.updaters) {\r\n                updater.update(particle, delta);\r\n            }\r\n            if (!particle.destroyed && !particle.spawning) {\r\n                await this._interactionManager.particlesInteract(particle, delta);\r\n            }\r\n        }\r\n        delete container.canvas.resizeFactor;\r\n        if (this.needsSort) {\r\n            const zArray = this._zArray;\r\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\r\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\r\n            this.needsSort = false;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}