{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport var DestroyOutMode = /*#__PURE__*/function () {\n  function DestroyOutMode(container) {\n    _classCallCheck(this, DestroyOutMode);\n    this.container = container;\n    this.modes = [\"destroy\"];\n  }\n  _createClass(DestroyOutMode, [{\n    key: \"update\",\n    value: function update(particle, direction, _delta, outMode) {\n      if (!this.modes.includes(outMode)) {\n        return;\n      }\n      var container = this.container;\n      switch (particle.outType) {\n        case \"normal\":\n        case \"outside\":\n          if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n            return;\n          }\n          break;\n        case \"inside\":\n          {\n            var _getDistances = getDistances(particle.position, particle.moveCenter),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy;\n            var _particle$velocity = particle.velocity,\n              vx = _particle$velocity.x,\n              vy = _particle$velocity.y;\n            if (vx < 0 && dx > particle.moveCenter.radius || vy < 0 && dy > particle.moveCenter.radius || vx >= 0 && dx < -particle.moveCenter.radius || vy >= 0 && dy < -particle.moveCenter.radius) {\n              return;\n            }\n            break;\n          }\n      }\n      container.particles.remove(particle, undefined, true);\n    }\n  }]);\n  return DestroyOutMode;\n}();","map":{"version":3,"names":["Vector","getDistances","isPointInside","DestroyOutMode","container","_classCallCheck","modes","_createClass","key","value","update","particle","direction","_delta","outMode","includes","outType","position","canvas","size","origin","getRadius","_getDistances","moveCenter","dx","dy","_particle$velocity","velocity","vx","x","vy","y","radius","particles","remove","undefined"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js"],"sourcesContent":["import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\r\nexport class DestroyOutMode {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.modes = [\"destroy\"];\r\n    }\r\n    update(particle, direction, _delta, outMode) {\r\n        if (!this.modes.includes(outMode)) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        switch (particle.outType) {\r\n            case \"normal\":\r\n            case \"outside\":\r\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\r\n                    return;\r\n                }\r\n                break;\r\n            case \"inside\": {\r\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\r\n                const { x: vx, y: vy } = particle.velocity;\r\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\r\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\r\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\r\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        container.particles.remove(particle, undefined, true);\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,YAAY,EAAEC,aAAa,QAAS,oBAAoB;AACzE,WAAaC,cAAc;EACvB,SAAAA,eAAYC,SAAS,EAAE;IAAAC,eAAA,OAAAF,cAAA;IACnB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,KAAK,GAAG,CAAC,SAAS,CAAC;EAC5B;EAACC,YAAA,CAAAJ,cAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAOC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,OAAO,EAAE;MACzC,IAAI,CAAC,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACD,OAAO,CAAC,EAAE;QAC/B;MACJ;MACA,IAAMV,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,QAAQO,QAAQ,CAACK,OAAO;QACpB,KAAK,QAAQ;QACb,KAAK,SAAS;UACV,IAAId,aAAa,CAACS,QAAQ,CAACM,QAAQ,EAAEb,SAAS,CAACc,MAAM,CAACC,IAAI,EAAEnB,MAAM,CAACoB,MAAM,EAAET,QAAQ,CAACU,SAAS,CAAC,CAAC,EAAET,SAAS,CAAC,EAAE;YACzG;UACJ;UACA;QACJ,KAAK,QAAQ;UAAE;YACX,IAAAU,aAAA,GAAmBrB,YAAY,CAACU,QAAQ,CAACM,QAAQ,EAAEN,QAAQ,CAACY,UAAU,CAAC;cAA/DC,EAAE,GAAAF,aAAA,CAAFE,EAAE;cAAEC,EAAE,GAAAH,aAAA,CAAFG,EAAE;YACd,IAAAC,kBAAA,GAAyBf,QAAQ,CAACgB,QAAQ;cAA/BC,EAAE,GAAAF,kBAAA,CAALG,CAAC;cAASC,EAAE,GAAAJ,kBAAA,CAALK,CAAC;YAChB,IAAKH,EAAE,GAAG,CAAC,IAAIJ,EAAE,GAAGb,QAAQ,CAACY,UAAU,CAACS,MAAM,IACzCF,EAAE,GAAG,CAAC,IAAIL,EAAE,GAAGd,QAAQ,CAACY,UAAU,CAACS,MAAO,IAC1CJ,EAAE,IAAI,CAAC,IAAIJ,EAAE,GAAG,CAACb,QAAQ,CAACY,UAAU,CAACS,MAAO,IAC5CF,EAAE,IAAI,CAAC,IAAIL,EAAE,GAAG,CAACd,QAAQ,CAACY,UAAU,CAACS,MAAO,EAAE;cAC/C;YACJ;YACA;UACJ;MACJ;MACA5B,SAAS,CAAC6B,SAAS,CAACC,MAAM,CAACvB,QAAQ,EAAEwB,SAAS,EAAE,IAAI,CAAC;IACzD;EAAC;EAAA,OAAAhC,cAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}