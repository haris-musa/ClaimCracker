{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\ClaimCracker-1.0\\\\ClaimCracker\\\\frontend\\\\src\\\\components\\\\TypingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  strings,\n  typeSpeed = 150,\n  backspaceSpeed = 70,\n  delayAfterCompletion = 1000\n}) => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [arrayIndex, setArrayIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [cursorVisible, setCursorVisible] = useState(true);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible(v => !v);\n    }, 500);\n    return () => clearInterval(cursorInterval);\n  }, []);\n  useEffect(() => {\n    const typeCharacter = () => {\n      if (!isDeleting) {\n        setText(prev => prev + strings[arrayIndex].charAt(charIndex));\n        setCharIndex(prev => prev + 1);\n      }\n    };\n    const deleteCharacter = () => {\n      if (isDeleting) {\n        setText(prev => prev.substring(0, prev.length - 1));\n        setCharIndex(prev => prev - 1);\n      }\n    };\n    if (arrayIndex >= strings.length) {\n      setArrayIndex(0);\n      return;\n    }\n    if (charIndex === strings[arrayIndex].length && !isDeleting) {\n      setTimeout(() => setIsDeleting(true), delayAfterCompletion);\n      return;\n    }\n    if (charIndex === 0 && isDeleting) {\n      setIsDeleting(false);\n      setArrayIndex(prev => (prev + 1) % strings.length);\n      return;\n    }\n    const timerId = setTimeout(() => {\n      setCursorVisible(true);\n      if (isDeleting) {\n        deleteCharacter();\n      } else {\n        typeCharacter();\n      }\n    }, isDeleting ? backspaceSpeed : typeSpeed);\n    return () => clearTimeout(timerId);\n  }, [charIndex, arrayIndex, isDeleting, strings, typeSpeed, backspaceSpeed, delayAfterCompletion]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"typing\",\n    children: [text, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"typing-cursor\",\n      style: {\n        opacity: cursorVisible ? 1 : 0\n      },\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingAnimation, \"wpzfjArXJf5qzoaemYDZpNm4SH4=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TypingAnimation","strings","typeSpeed","backspaceSpeed","delayAfterCompletion","_s","text","setText","arrayIndex","setArrayIndex","charIndex","setCharIndex","isDeleting","setIsDeleting","cursorVisible","setCursorVisible","cursorInterval","setInterval","v","clearInterval","typeCharacter","prev","charAt","deleteCharacter","substring","length","setTimeout","timerId","clearTimeout","className","children","style","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/src/components/TypingAnimation.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst TypingAnimation = ({\r\n  strings,\r\n  typeSpeed = 150,\r\n  backspaceSpeed = 70,\r\n  delayAfterCompletion = 1000,\r\n}) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [arrayIndex, setArrayIndex] = useState(0);\r\n  const [charIndex, setCharIndex] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [cursorVisible, setCursorVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const cursorInterval = setInterval(() => {\r\n      setCursorVisible((v) => !v);\r\n    }, 500);\r\n\r\n    return () => clearInterval(cursorInterval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const typeCharacter = () => {\r\n      if (!isDeleting) {\r\n        setText((prev) => prev + strings[arrayIndex].charAt(charIndex));\r\n        setCharIndex((prev) => prev + 1);\r\n      }\r\n    };\r\n\r\n    const deleteCharacter = () => {\r\n      if (isDeleting) {\r\n        setText((prev) => prev.substring(0, prev.length - 1));\r\n        setCharIndex((prev) => prev - 1);\r\n      }\r\n    };\r\n\r\n    if (arrayIndex >= strings.length) {\r\n      setArrayIndex(0);\r\n      return;\r\n    }\r\n\r\n    if (charIndex === strings[arrayIndex].length && !isDeleting) {\r\n      setTimeout(() => setIsDeleting(true), delayAfterCompletion);\r\n      return;\r\n    }\r\n\r\n    if (charIndex === 0 && isDeleting) {\r\n      setIsDeleting(false);\r\n      setArrayIndex((prev) => (prev + 1) % strings.length);\r\n      return;\r\n    }\r\n\r\n    const timerId = setTimeout(\r\n      () => {\r\n        setCursorVisible(true);\r\n        if (isDeleting) {\r\n          deleteCharacter();\r\n        } else {\r\n          typeCharacter();\r\n        }\r\n      },\r\n      isDeleting ? backspaceSpeed : typeSpeed\r\n    );\r\n\r\n    return () => clearTimeout(timerId);\r\n  }, [\r\n    charIndex,\r\n    arrayIndex,\r\n    isDeleting,\r\n    strings,\r\n    typeSpeed,\r\n    backspaceSpeed,\r\n    delayAfterCompletion,\r\n  ]);\r\n\r\n  return (\r\n    <span className=\"typing\">\r\n      {text}\r\n      <span\r\n        className=\"typing-cursor\"\r\n        style={{ opacity: cursorVisible ? 1 : 0 }}\r\n      >\r\n        |\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default TypingAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}