{"ast":null,"code":"import _slicedToArray from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  var newValue = newFactor[key];\n  if (newValue !== undefined) {\n    var _factor$key;\n    factor[key] = ((_factor$key = factor[key]) !== null && _factor$key !== void 0 ? _factor$key : 1) * newValue;\n  }\n}\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    var _this = this;\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this._applyPostDrawUpdaters = function (particle) {\n      var _iterator = _createForOfIteratorHelper(_this._postDrawUpdaters),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var updater = _step.value;\n          updater.afterDraw && updater.afterDraw(particle);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n    this._applyPreDrawUpdaters = function (ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _iterator2 = _createForOfIteratorHelper(_this._preDrawUpdaters),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var updater = _step2.value;\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n              fill = _updater$getColorStyl.fill,\n              stroke = _updater$getColorStyl.stroke;\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n          updater.beforeDraw && updater.beforeDraw(particle);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n    this._applyResizePlugins = function () {\n      var _iterator3 = _createForOfIteratorHelper(_this._resizePlugins),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var plugin = _step3.value;\n          plugin.resize && plugin.resize();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    };\n    this._getPluginParticleColors = function (particle) {\n      var fColor, sColor;\n      var _iterator4 = _createForOfIteratorHelper(_this._colorPlugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var plugin = _step4.value;\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return [fColor, sColor];\n    };\n    this._initCover = function () {\n      var options = _this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = rangeColorToRgb(color);\n      if (coverRgb) {\n        var coverColor = _objectSpread(_objectSpread({}, coverRgb), {}, {\n          a: cover.opacity\n        });\n        _this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    };\n    this._initStyle = function () {\n      var element = _this.element,\n        options = _this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (_this._fullScreen) {\n        _this._originalStyle = deepExtend({}, element.style);\n        _this._setFullScreenStyle();\n      } else {\n        _this._resetOriginalStyle();\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    };\n    this._initTrail = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options, trail, trailFill, fillColor, _trail;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (trail.enable) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 3:\n            if (!trailFill.color) {\n              _context.next = 11;\n              break;\n            }\n            fillColor = rangeColorToRgb(trailFill.color);\n            if (fillColor) {\n              _context.next = 7;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 7:\n            _trail = options.particles.move.trail;\n            _this._trailFill = {\n              color: _objectSpread({}, fillColor),\n              opacity: 1 / _trail.length\n            };\n            _context.next = 13;\n            break;\n          case 11:\n            _context.next = 13;\n            return new Promise(function (resolve, reject) {\n              if (!trailFill.image) {\n                return;\n              }\n              var img = document.createElement(\"img\");\n              img.addEventListener(\"load\", function () {\n                _this._trailFill = {\n                  image: img,\n                  opacity: 1 / trail.length\n                };\n                resolve();\n              });\n              img.addEventListener(\"error\", function (evt) {\n                reject(evt.error);\n              });\n              img.src = trailFill.image;\n            });\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    this._paintBase = function (baseColor) {\n      _this.draw(function (ctx) {\n        return paintBase(ctx, _this.size, baseColor);\n      });\n    };\n    this._paintImage = function (image, opacity) {\n      _this.draw(function (ctx) {\n        return paintImage(ctx, _this.size, image, opacity);\n      });\n    };\n    this._repairStyle = function () {\n      var element = _this.element;\n      if (!element) {\n        return;\n      }\n      _this._safeMutationObserver(function (observer) {\n        return observer.disconnect();\n      });\n      _this._initStyle();\n      _this.initBackground();\n      _this._safeMutationObserver(function (observer) {\n        return observer.observe(element, {\n          attributes: true\n        });\n      });\n    };\n    this._resetOriginalStyle = function () {\n      var element = _this.element,\n        originalStyle = _this._originalStyle;\n      if (!(element && originalStyle)) {\n        return;\n      }\n      var style = element.style;\n      style.position = originalStyle.position;\n      style.zIndex = originalStyle.zIndex;\n      style.top = originalStyle.top;\n      style.left = originalStyle.left;\n      style.width = originalStyle.width;\n      style.height = originalStyle.height;\n    };\n    this._safeMutationObserver = function (callback) {\n      if (!_this._mutationObserver) {\n        return;\n      }\n      callback(_this._mutationObserver);\n    };\n    this._setFullScreenStyle = function () {\n      var element = _this.element;\n      if (!element) {\n        return;\n      }\n      var priority = \"important\",\n        style = element.style;\n      style.setProperty(\"position\", \"fixed\", priority);\n      style.setProperty(\"z-index\", _this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      style.setProperty(\"top\", \"0\", priority);\n      style.setProperty(\"left\", \"0\", priority);\n      style.setProperty(\"width\", \"100%\", priority);\n      style.setProperty(\"height\", \"100%\", priority);\n    };\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n  }\n  _createClass(Canvas, [{\n    key: \"_fullScreen\",\n    get: function get() {\n      return this.container.actualOptions.fullScreen.enable;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        trailFill = this._trailFill;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && trailFill) {\n        if (trailFill.color) {\n          this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n        } else if (trailFill.image) {\n          this._paintImage(trailFill.image, trailFill.opacity);\n        }\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this2.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stop();\n      if (this._generated) {\n        var element = this.element;\n        element && element.remove();\n      } else {\n        this._resetOriginalStyle();\n      }\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      this._resizePlugins = [];\n      this._colorPlugins = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      var ctx = this._context;\n      if (!ctx) {\n        return;\n      }\n      return cb(ctx);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _particle$getStrokeCo,\n        _this3 = this;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_particle$getStrokeCo = particle.getStrokeColor()) !== null && _particle$getStrokeCo !== void 0 ? _particle$getStrokeCo : pfColor;\n      var _this$_getPluginParti = this._getPluginParticleColors(particle),\n        _this$_getPluginParti2 = _slicedToArray(_this$_getPluginParti, 2),\n        fColor = _this$_getPluginParti2[0],\n        sColor = _this$_getPluginParti2[1];\n      if (!fColor) {\n        fColor = pfColor;\n      }\n      if (!sColor) {\n        sColor = psColor;\n      }\n      if (!fColor && !sColor) {\n        return;\n      }\n      this.draw(function (ctx) {\n        var _ref2, _particle$bubble$opac, _particle$opacity, _particle$strokeOpaci;\n        var container = _this3.container,\n          options = container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_ref2 = (_particle$bubble$opac = particle.bubble.opacity) !== null && _particle$bubble$opac !== void 0 ? _particle$bubble$opac : (_particle$opacity = particle.opacity) === null || _particle$opacity === void 0 ? void 0 : _particle$opacity.value) !== null && _ref2 !== void 0 ? _ref2 : 1,\n          strokeOpacity = (_particle$strokeOpaci = particle.strokeOpacity) !== null && _particle$strokeOpaci !== void 0 ? _particle$strokeOpaci : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor,\n          transform = {},\n          colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n          };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        _this3._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n        _drawParticle({\n          container: container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n        _this3._applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        return _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        return _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this._safeMutationObserver(function (obs) {\n                return obs.disconnect();\n              });\n              this._mutationObserver = safeMutationObserver(function (records) {\n                var _iterator5 = _createForOfIteratorHelper(records),\n                  _step5;\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var record = _step5.value;\n                    if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                      _this4._repairStyle();\n                    }\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              });\n              this.resize();\n              this._initStyle();\n              this._initCover();\n              _context2.prev = 5;\n              _context2.next = 8;\n              return this._initTrail();\n            case 8:\n              _context2.next = 13;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](5);\n              getLogger().error(_context2.t0);\n            case 13:\n              this.initBackground();\n              this._safeMutationObserver(function (obs) {\n                if (!_this4.element) {\n                  return;\n                }\n                obs.observe(_this4.element, {\n                  attributes: true\n                });\n              });\n              this.initUpdaters();\n              this.initPlugins();\n              this.paint();\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[5, 10]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element;\n      if (!element) {\n        return;\n      }\n      var elementStyle = element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      this._resizePlugins = [];\n      var _iterator6 = _createForOfIteratorHelper(this.container.plugins),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n            plugin = _step6$value[1];\n          if (plugin.resize) {\n            this._resizePlugins.push(plugin);\n          }\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            this._colorPlugins.push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      var _iterator7 = _createForOfIteratorHelper(this.container.particles.updaters),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var updater = _step7.value;\n          if (updater.afterDraw) {\n            this._postDrawUpdaters.push(updater);\n          }\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            this._preDrawUpdaters.push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _this5 = this;\n      if (this._generated && this.element) {\n        this.element.remove();\n      }\n      this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n      this.element = canvas;\n      this.element.ariaHidden = \"true\";\n      this._originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this._context = this.element.getContext(\"2d\");\n      this._safeMutationObserver(function (obs) {\n        if (!_this5.element) {\n          return;\n        }\n        obs.observe(_this5.element, {\n          attributes: true\n        });\n      });\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this6 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this6.size);\n          _this6._paintBase(_this6._coverColorStyle);\n        } else {\n          _this6._paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return false;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return false;\n      }\n      var oldSize = _objectSpread({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _this7 = this;\n      this._safeMutationObserver(function (obs) {\n        return obs.disconnect();\n      });\n      this._mutationObserver = undefined;\n      this.draw(function (ctx) {\n        return _clear(ctx, _this7.size);\n      });\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var container, needsRefresh;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!this.element || !this.resize())) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              container = this.container, needsRefresh = container.updateActualOptions();\n              container.particles.setDensity();\n              this._applyResizePlugins();\n              if (!needsRefresh) {\n                _context3.next = 8;\n                break;\n              }\n              _context3.next = 8;\n              return container.refresh();\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }]);\n  return Canvas;\n}();","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","paintImage","deepExtend","getLogger","safeMutationObserver","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","newValue","undefined","_factor$key","Canvas","container","_this","_classCallCheck","_applyPostDrawUpdaters","particle","_iterator","_createForOfIteratorHelper","_postDrawUpdaters","_step","s","n","done","updater","value","afterDraw","err","e","f","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_iterator2","_preDrawUpdaters","_step2","getColorStyles","_updater$getColorStyl","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_iterator3","_resizePlugins","_step3","plugin","resize","_getPluginParticleColors","fColor","sColor","_iterator4","_colorPlugins","_step4","particleFillColor","particleStrokeColor","_initCover","options","actualOptions","cover","backgroundMask","color","coverRgb","coverColor","_objectSpread","a","opacity","_coverColorStyle","_initStyle","element","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trail","trailFill","fillColor","_trail","wrap","_callee$","_context","prev","next","particles","move","enable","abrupt","_trailFill","length","Promise","resolve","reject","image","img","document","createElement","addEventListener","evt","error","src","stop","_paintBase","baseColor","draw","size","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","position","zIndex","top","left","width","height","callback","_mutationObserver","priority","fullScreen","toString","_generated","_createClass","get","_this2","paint","destroy","remove","cb","delta","_particle$getStrokeCo","_this3","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$_getPluginParti","_this$_getPluginParti2","_slicedToArray","_ref2","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","Math","pow","zIndexFactor","opacityRate","bubble","strokeOpacity","zStrokeOpacity","context","composite","sizeRate","shadow","_init","_callee2","_this4","_callee2$","_context2","obs","records","_iterator5","_step5","record","type","attributeName","t0","initUpdaters","initPlugins","init","apply","arguments","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_iterator6","plugins","_step6","_step6$value","push","_iterator7","updaters","_step7","loadCanvas","canvas","_this5","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","retina","_this6","pxRatio","pixelRatio","newSize","oldSize","started","resizeFactor","_this7","_windowResize","_callee3","needsRefresh","_callee3$","_context3","updateActualOptions","setDensity","refresh","windowResize"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\r\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\r\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\r\nimport { generatedAttribute } from \"./Utils/Constants\";\r\nfunction setTransformValue(factor, newFactor, key) {\r\n    const newValue = newFactor[key];\r\n    if (newValue !== undefined) {\r\n        factor[key] = (factor[key] ?? 1) * newValue;\r\n    }\r\n}\r\nexport class Canvas {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this._applyPostDrawUpdaters = (particle) => {\r\n            for (const updater of this._postDrawUpdaters) {\r\n                updater.afterDraw && updater.afterDraw(particle);\r\n            }\r\n        };\r\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\r\n            for (const updater of this._preDrawUpdaters) {\r\n                if (updater.getColorStyles) {\r\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\r\n                    if (fill) {\r\n                        colorStyles.fill = fill;\r\n                    }\r\n                    if (stroke) {\r\n                        colorStyles.stroke = stroke;\r\n                    }\r\n                }\r\n                if (updater.getTransformValues) {\r\n                    const updaterTransform = updater.getTransformValues(particle);\r\n                    for (const key in updaterTransform) {\r\n                        setTransformValue(transform, updaterTransform, key);\r\n                    }\r\n                }\r\n                updater.beforeDraw && updater.beforeDraw(particle);\r\n            }\r\n        };\r\n        this._applyResizePlugins = () => {\r\n            for (const plugin of this._resizePlugins) {\r\n                plugin.resize && plugin.resize();\r\n            }\r\n        };\r\n        this._getPluginParticleColors = (particle) => {\r\n            let fColor, sColor;\r\n            for (const plugin of this._colorPlugins) {\r\n                if (!fColor && plugin.particleFillColor) {\r\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\r\n                }\r\n                if (!sColor && plugin.particleStrokeColor) {\r\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\r\n                }\r\n                if (fColor && sColor) {\r\n                    break;\r\n                }\r\n            }\r\n            return [fColor, sColor];\r\n        };\r\n        this._initCover = () => {\r\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\r\n            if (coverRgb) {\r\n                const coverColor = {\r\n                    ...coverRgb,\r\n                    a: cover.opacity,\r\n                };\r\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\r\n            }\r\n        };\r\n        this._initStyle = () => {\r\n            const element = this.element, options = this.container.actualOptions;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            if (this._fullScreen) {\r\n                this._originalStyle = deepExtend({}, element.style);\r\n                this._setFullScreenStyle();\r\n            }\r\n            else {\r\n                this._resetOriginalStyle();\r\n            }\r\n            for (const key in options.style) {\r\n                if (!key || !options.style) {\r\n                    continue;\r\n                }\r\n                const value = options.style[key];\r\n                if (!value) {\r\n                    continue;\r\n                }\r\n                element.style.setProperty(key, value, \"important\");\r\n            }\r\n        };\r\n        this._initTrail = async () => {\r\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\r\n            if (!trail.enable) {\r\n                return;\r\n            }\r\n            if (trailFill.color) {\r\n                const fillColor = rangeColorToRgb(trailFill.color);\r\n                if (!fillColor) {\r\n                    return;\r\n                }\r\n                const trail = options.particles.move.trail;\r\n                this._trailFill = {\r\n                    color: {\r\n                        ...fillColor,\r\n                    },\r\n                    opacity: 1 / trail.length,\r\n                };\r\n            }\r\n            else {\r\n                await new Promise((resolve, reject) => {\r\n                    if (!trailFill.image) {\r\n                        return;\r\n                    }\r\n                    const img = document.createElement(\"img\");\r\n                    img.addEventListener(\"load\", () => {\r\n                        this._trailFill = {\r\n                            image: img,\r\n                            opacity: 1 / trail.length,\r\n                        };\r\n                        resolve();\r\n                    });\r\n                    img.addEventListener(\"error\", (evt) => {\r\n                        reject(evt.error);\r\n                    });\r\n                    img.src = trailFill.image;\r\n                });\r\n            }\r\n        };\r\n        this._paintBase = (baseColor) => {\r\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\r\n        };\r\n        this._paintImage = (image, opacity) => {\r\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\r\n        };\r\n        this._repairStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._safeMutationObserver((observer) => observer.disconnect());\r\n            this._initStyle();\r\n            this.initBackground();\r\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\r\n        };\r\n        this._resetOriginalStyle = () => {\r\n            const element = this.element, originalStyle = this._originalStyle;\r\n            if (!(element && originalStyle)) {\r\n                return;\r\n            }\r\n            const style = element.style;\r\n            style.position = originalStyle.position;\r\n            style.zIndex = originalStyle.zIndex;\r\n            style.top = originalStyle.top;\r\n            style.left = originalStyle.left;\r\n            style.width = originalStyle.width;\r\n            style.height = originalStyle.height;\r\n        };\r\n        this._safeMutationObserver = (callback) => {\r\n            if (!this._mutationObserver) {\r\n                return;\r\n            }\r\n            callback(this._mutationObserver);\r\n        };\r\n        this._setFullScreenStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            const priority = \"important\", style = element.style;\r\n            style.setProperty(\"position\", \"fixed\", priority);\r\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\r\n            style.setProperty(\"top\", \"0\", priority);\r\n            style.setProperty(\"left\", \"0\", priority);\r\n            style.setProperty(\"width\", \"100%\", priority);\r\n            style.setProperty(\"height\", \"100%\", priority);\r\n        };\r\n        this.size = {\r\n            height: 0,\r\n            width: 0,\r\n        };\r\n        this._context = null;\r\n        this._generated = false;\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n    }\r\n    get _fullScreen() {\r\n        return this.container.actualOptions.fullScreen.enable;\r\n    }\r\n    clear() {\r\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\r\n        if (options.backgroundMask.enable) {\r\n            this.paint();\r\n        }\r\n        else if (trail.enable && trail.length > 0 && trailFill) {\r\n            if (trailFill.color) {\r\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\r\n            }\r\n            else if (trailFill.image) {\r\n                this._paintImage(trailFill.image, trailFill.opacity);\r\n            }\r\n        }\r\n        else {\r\n            this.draw((ctx) => {\r\n                clear(ctx, this.size);\r\n            });\r\n        }\r\n    }\r\n    destroy() {\r\n        this.stop();\r\n        if (this._generated) {\r\n            const element = this.element;\r\n            element && element.remove();\r\n        }\r\n        else {\r\n            this._resetOriginalStyle();\r\n        }\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n    }\r\n    draw(cb) {\r\n        const ctx = this._context;\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n        return cb(ctx);\r\n    }\r\n    drawParticle(particle, delta) {\r\n        if (particle.spawning || particle.destroyed) {\r\n            return;\r\n        }\r\n        const radius = particle.getRadius();\r\n        if (radius <= 0) {\r\n            return;\r\n        }\r\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\r\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\r\n        if (!fColor) {\r\n            fColor = pfColor;\r\n        }\r\n        if (!sColor) {\r\n            sColor = psColor;\r\n        }\r\n        if (!fColor && !sColor) {\r\n            return;\r\n        }\r\n        this.draw((ctx) => {\r\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\r\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\r\n            };\r\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\r\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\r\n            drawParticle({\r\n                container,\r\n                context: ctx,\r\n                particle,\r\n                delta,\r\n                colorStyles,\r\n                backgroundMask: options.backgroundMask.enable,\r\n                composite: options.backgroundMask.composite,\r\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\r\n                opacity: zOpacity,\r\n                shadow: particle.options.shadow,\r\n                transform,\r\n            });\r\n            this._applyPostDrawUpdaters(particle);\r\n        });\r\n    }\r\n    drawParticlePlugin(plugin, particle, delta) {\r\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\r\n    }\r\n    drawPlugin(plugin, delta) {\r\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\r\n    }\r\n    async init() {\r\n        this._safeMutationObserver((obs) => obs.disconnect());\r\n        this._mutationObserver = safeMutationObserver((records) => {\r\n            for (const record of records) {\r\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\r\n                    this._repairStyle();\r\n                }\r\n            }\r\n        });\r\n        this.resize();\r\n        this._initStyle();\r\n        this._initCover();\r\n        try {\r\n            await this._initTrail();\r\n        }\r\n        catch (e) {\r\n            getLogger().error(e);\r\n        }\r\n        this.initBackground();\r\n        this._safeMutationObserver((obs) => {\r\n            if (!this.element) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n        this.initUpdaters();\r\n        this.initPlugins();\r\n        this.paint();\r\n    }\r\n    initBackground() {\r\n        const options = this.container.actualOptions, background = options.background, element = this.element;\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const elementStyle = element.style;\r\n        if (!elementStyle) {\r\n            return;\r\n        }\r\n        if (background.color) {\r\n            const color = rangeColorToRgb(background.color);\r\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\r\n        }\r\n        else {\r\n            elementStyle.backgroundColor = \"\";\r\n        }\r\n        elementStyle.backgroundImage = background.image || \"\";\r\n        elementStyle.backgroundPosition = background.position || \"\";\r\n        elementStyle.backgroundRepeat = background.repeat || \"\";\r\n        elementStyle.backgroundSize = background.size || \"\";\r\n    }\r\n    initPlugins() {\r\n        this._resizePlugins = [];\r\n        for (const [, plugin] of this.container.plugins) {\r\n            if (plugin.resize) {\r\n                this._resizePlugins.push(plugin);\r\n            }\r\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\r\n                this._colorPlugins.push(plugin);\r\n            }\r\n        }\r\n    }\r\n    initUpdaters() {\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        for (const updater of this.container.particles.updaters) {\r\n            if (updater.afterDraw) {\r\n                this._postDrawUpdaters.push(updater);\r\n            }\r\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\r\n                this._preDrawUpdaters.push(updater);\r\n            }\r\n        }\r\n    }\r\n    loadCanvas(canvas) {\r\n        if (this._generated && this.element) {\r\n            this.element.remove();\r\n        }\r\n        this._generated =\r\n            canvas.dataset && generatedAttribute in canvas.dataset\r\n                ? canvas.dataset[generatedAttribute] === \"true\"\r\n                : this._generated;\r\n        this.element = canvas;\r\n        this.element.ariaHidden = \"true\";\r\n        this._originalStyle = deepExtend({}, this.element.style);\r\n        this.size.height = canvas.offsetHeight;\r\n        this.size.width = canvas.offsetWidth;\r\n        this._context = this.element.getContext(\"2d\");\r\n        this._safeMutationObserver((obs) => {\r\n            if (!this.element) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n        this.container.retina.init();\r\n        this.initBackground();\r\n    }\r\n    paint() {\r\n        const options = this.container.actualOptions;\r\n        this.draw((ctx) => {\r\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\r\n                clear(ctx, this.size);\r\n                this._paintBase(this._coverColorStyle);\r\n            }\r\n            else {\r\n                this._paintBase();\r\n            }\r\n        });\r\n    }\r\n    resize() {\r\n        if (!this.element) {\r\n            return false;\r\n        }\r\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\r\n            width: this.element.offsetWidth * pxRatio,\r\n            height: this.element.offsetHeight * pxRatio,\r\n        };\r\n        if (newSize.height === size.height &&\r\n            newSize.width === size.width &&\r\n            newSize.height === this.element.height &&\r\n            newSize.width === this.element.width) {\r\n            return false;\r\n        }\r\n        const oldSize = { ...size };\r\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\r\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\r\n        if (this.container.started) {\r\n            this.resizeFactor = {\r\n                width: size.width / oldSize.width,\r\n                height: size.height / oldSize.height,\r\n            };\r\n        }\r\n        return true;\r\n    }\r\n    stop() {\r\n        this._safeMutationObserver((obs) => obs.disconnect());\r\n        this._mutationObserver = undefined;\r\n        this.draw((ctx) => clear(ctx, this.size));\r\n    }\r\n    async windowResize() {\r\n        if (!this.element || !this.resize()) {\r\n            return;\r\n        }\r\n        const container = this.container, needsRefresh = container.updateActualOptions();\r\n        container.particles.setDensity();\r\n        this._applyResizePlugins();\r\n        if (needsRefresh) {\r\n            await container.refresh();\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}