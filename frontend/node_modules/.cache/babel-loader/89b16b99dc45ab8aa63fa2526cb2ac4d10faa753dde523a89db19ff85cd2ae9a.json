{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport var Vector3d = /*#__PURE__*/function () {\n  function Vector3d(xOrCoords, y, z) {\n    var _this = this;\n    _classCallCheck(this, Vector3d);\n    this._updateFromAngle = function (angle, length) {\n      _this.x = Math.cos(angle) * length;\n      _this.y = Math.sin(angle) * length;\n    };\n    if (!isNumber(xOrCoords) && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      var coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : 0;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z !== null && z !== void 0 ? z : 0;\n    } else {\n      throw new Error(\"\".concat(errorPrefix, \" Vector3d not initialized correctly\"));\n    }\n  }\n  _createClass(Vector3d, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this._updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this._updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector3d.clone(this);\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n      this.z /= n;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n      this.z *= n;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      var length = this.length;\n      if (length != 0) {\n        this.multTo(1.0 / length);\n      }\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(c) {\n      this.x = c.x;\n      this.y = c.y;\n      var v3d = c;\n      this.z = v3d.z ? v3d.z : 0;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n    }\n  }], [{\n    key: \"origin\",\n    get: function get() {\n      return Vector3d.create(0, 0, 0);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector3d.create(source.x, source.y, source.z);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y, z) {\n      return new Vector3d(x, y, z);\n    }\n  }]);\n  return Vector3d;\n}();","map":{"version":3,"names":["errorPrefix","isNumber","Vector3d","xOrCoords","y","z","_this","_classCallCheck","_updateFromAngle","angle","length","x","Math","cos","sin","coords3d","undefined","Error","concat","_createClass","key","get","atan2","set","sqrt","getLengthSq","value","add","v","create","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","pow","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","source"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["import { errorPrefix } from \"./Constants\";\r\nimport { isNumber } from \"../../Utils/Utils\";\r\nexport class Vector3d {\r\n    constructor(xOrCoords, y, z) {\r\n        this._updateFromAngle = (angle, length) => {\r\n            this.x = Math.cos(angle) * length;\r\n            this.y = Math.sin(angle) * length;\r\n        };\r\n        if (!isNumber(xOrCoords) && xOrCoords) {\r\n            this.x = xOrCoords.x;\r\n            this.y = xOrCoords.y;\r\n            const coords3d = xOrCoords;\r\n            this.z = coords3d.z ? coords3d.z : 0;\r\n        }\r\n        else if (xOrCoords !== undefined && y !== undefined) {\r\n            this.x = xOrCoords;\r\n            this.y = y;\r\n            this.z = z ?? 0;\r\n        }\r\n        else {\r\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\r\n        }\r\n    }\r\n    static get origin() {\r\n        return Vector3d.create(0, 0, 0);\r\n    }\r\n    get angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    set angle(angle) {\r\n        this._updateFromAngle(angle, this.length);\r\n    }\r\n    get length() {\r\n        return Math.sqrt(this.getLengthSq());\r\n    }\r\n    set length(length) {\r\n        this._updateFromAngle(this.angle, length);\r\n    }\r\n    static clone(source) {\r\n        return Vector3d.create(source.x, source.y, source.z);\r\n    }\r\n    static create(x, y, z) {\r\n        return new Vector3d(x, y, z);\r\n    }\r\n    add(v) {\r\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n    addTo(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n    }\r\n    copy() {\r\n        return Vector3d.clone(this);\r\n    }\r\n    distanceTo(v) {\r\n        return this.sub(v).length;\r\n    }\r\n    distanceToSq(v) {\r\n        return this.sub(v).getLengthSq();\r\n    }\r\n    div(n) {\r\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\r\n    }\r\n    divTo(n) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n        this.z /= n;\r\n    }\r\n    getLengthSq() {\r\n        return this.x ** 2 + this.y ** 2;\r\n    }\r\n    mult(n) {\r\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\r\n    }\r\n    multTo(n) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n        this.z *= n;\r\n    }\r\n    normalize() {\r\n        const length = this.length;\r\n        if (length != 0) {\r\n            this.multTo(1.0 / length);\r\n        }\r\n    }\r\n    rotate(angle) {\r\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\r\n    }\r\n    setTo(c) {\r\n        this.x = c.x;\r\n        this.y = c.y;\r\n        const v3d = c;\r\n        this.z = v3d.z ? v3d.z : 0;\r\n    }\r\n    sub(v) {\r\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n    subFrom(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}