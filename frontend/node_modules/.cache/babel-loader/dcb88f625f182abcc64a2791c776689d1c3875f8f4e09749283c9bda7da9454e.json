{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var ByteStream = /*#__PURE__*/function () {\n  function ByteStream(bytes) {\n    _classCallCheck(this, ByteStream);\n    this.pos = 0;\n    this.data = new Uint8ClampedArray(bytes);\n  }\n  _createClass(ByteStream, [{\n    key: \"getString\",\n    value: function getString(count) {\n      var slice = this.data.slice(this.pos, this.pos + count);\n      this.pos += slice.length;\n      return slice.reduce(function (acc, curr) {\n        return acc + String.fromCharCode(curr);\n      }, \"\");\n    }\n  }, {\n    key: \"nextByte\",\n    value: function nextByte() {\n      return this.data[this.pos++];\n    }\n  }, {\n    key: \"nextTwoBytes\",\n    value: function nextTwoBytes() {\n      this.pos += 2;\n      return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n  }, {\n    key: \"readSubBlocks\",\n    value: function readSubBlocks() {\n      var blockString = \"\",\n        size = 0;\n      do {\n        size = this.data[this.pos++];\n        for (var count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {}\n      } while (size !== 0);\n      return blockString;\n    }\n  }, {\n    key: \"readSubBlocksBin\",\n    value: function readSubBlocksBin() {\n      var size = 0,\n        len = 0;\n      for (var offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n        len += size;\n      }\n      var blockData = new Uint8Array(len);\n      for (var i = 0; (size = this.data[this.pos++]) !== 0;) {\n        for (var count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {}\n      }\n      return blockData;\n    }\n  }, {\n    key: \"skipSubBlocks\",\n    value: function skipSubBlocks() {\n      for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {}\n      this.pos++;\n    }\n  }]);\n  return ByteStream;\n}();","map":{"version":3,"names":["ByteStream","bytes","_classCallCheck","pos","data","Uint8ClampedArray","_createClass","key","value","getString","count","slice","length","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","size","readSubBlocksBin","len","offset","blockData","Uint8Array","i","skipSubBlocks"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js"],"sourcesContent":["export class ByteStream {\r\n    constructor(bytes) {\r\n        this.pos = 0;\r\n        this.data = new Uint8ClampedArray(bytes);\r\n    }\r\n    getString(count) {\r\n        const slice = this.data.slice(this.pos, this.pos + count);\r\n        this.pos += slice.length;\r\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\r\n    }\r\n    nextByte() {\r\n        return this.data[this.pos++];\r\n    }\r\n    nextTwoBytes() {\r\n        this.pos += 2;\r\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\r\n    }\r\n    readSubBlocks() {\r\n        let blockString = \"\", size = 0;\r\n        do {\r\n            size = this.data[this.pos++];\r\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\r\n            }\r\n        } while (size !== 0);\r\n        return blockString;\r\n    }\r\n    readSubBlocksBin() {\r\n        let size = 0, len = 0;\r\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\r\n            len += size;\r\n        }\r\n        const blockData = new Uint8Array(len);\r\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\r\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\r\n            }\r\n        }\r\n        return blockData;\r\n    }\r\n    skipSubBlocks() {\r\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\r\n        }\r\n        this.pos++;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}