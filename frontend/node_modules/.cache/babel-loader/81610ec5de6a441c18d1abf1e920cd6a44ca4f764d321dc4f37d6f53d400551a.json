{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport var Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n    this.container = container;\n    this.pixelRatio = 1;\n    this.reduceFactor = 1;\n  }\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var container = this.container,\n        options = container.actualOptions;\n      this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n      this.reduceFactor = 1;\n      var ratio = this.pixelRatio;\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n      var particles = options.particles,\n        moveOptions = particles.move;\n      this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n      this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n      this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var options = particle.options,\n        ratio = this.pixelRatio,\n        moveOptions = options.move,\n        moveDistance = moveOptions.distance,\n        props = particle.retina;\n      props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n      props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n      props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n      props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n      var maxDistance = props.maxDistance;\n      maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n      maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n      props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n  }]);\n  return Retina;\n}();","map":{"version":3,"names":["getRangeValue","isSsr","Retina","container","_classCallCheck","pixelRatio","reduceFactor","_createClass","key","value","init","options","actualOptions","detectRetina","window","devicePixelRatio","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","moveOptions","move","attractDistance","attract","distance","maxSpeed","gravity","sizeAnimationSpeed","animation","speed","initParticle","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","undefined","vertical"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Core/Retina.js"],"sourcesContent":["import { getRangeValue } from \"../Utils/NumberUtils\";\r\nimport { isSsr } from \"../Utils/Utils\";\r\nexport class Retina {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.pixelRatio = 1;\r\n        this.reduceFactor = 1;\r\n    }\r\n    init() {\r\n        const container = this.container, options = container.actualOptions;\r\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\r\n        this.reduceFactor = 1;\r\n        const ratio = this.pixelRatio;\r\n        if (container.canvas.element) {\r\n            const element = container.canvas.element;\r\n            container.canvas.size.width = element.offsetWidth * ratio;\r\n            container.canvas.size.height = element.offsetHeight * ratio;\r\n        }\r\n        const particles = options.particles, moveOptions = particles.move;\r\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\r\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\r\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\r\n    }\r\n    initParticle(particle) {\r\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\r\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\r\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\r\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\r\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\r\n        const maxDistance = props.maxDistance;\r\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\r\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\r\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}