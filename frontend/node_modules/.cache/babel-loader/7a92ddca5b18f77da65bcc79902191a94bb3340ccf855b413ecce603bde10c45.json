{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n  if (engine.loadImage) {\n    return;\n  }\n  engine.loadImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n      var _data$gif, _data$name, image, imageFunc, _data$name2;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!data.name && !data.src)) {\n              _context.next = 2;\n              break;\n            }\n            throw new Error(\"\".concat(errorPrefix, \" no image source provided\"));\n          case 2:\n            if (!engine.images) {\n              engine.images = [];\n            }\n            if (!engine.images.find(function (t) {\n              return t.name === data.name || t.source === data.src;\n            })) {\n              _context.next = 5;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 5:\n            _context.prev = 5;\n            image = {\n              gif: (_data$gif = data.gif) !== null && _data$gif !== void 0 ? _data$gif : false,\n              name: (_data$name = data.name) !== null && _data$name !== void 0 ? _data$name : data.src,\n              source: data.src,\n              type: data.src.substring(data.src.length - 3),\n              error: false,\n              loading: true,\n              replaceColor: data.replaceColor,\n              ratio: data.width && data.height ? data.width / data.height : undefined\n            };\n            engine.images.push(image);\n            imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            _context.next = 11;\n            return imageFunc(image);\n          case 11:\n            _context.next = 16;\n            break;\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            throw new Error(\"\".concat(errorPrefix, \" \").concat((_data$name2 = data.name) !== null && _data$name2 !== void 0 ? _data$name2 : data.src, \" not found\"));\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[5, 13]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport function loadImageShape(_x2) {\n  return _loadImageShape.apply(this, arguments);\n}\nfunction _loadImageShape() {\n  _loadImageShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(engine) {\n    var refresh,\n      preloader,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          refresh = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : true;\n          addLoadImageToEngine(engine);\n          preloader = new ImagePreloaderPlugin(engine);\n          _context2.next = 5;\n          return engine.addPlugin(preloader, refresh);\n        case 5:\n          _context2.next = 7;\n          return engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadImageShape.apply(this, arguments);\n}","map":{"version":3,"names":["downloadSvgImage","loadGifImage","loadImage","ImageDrawer","ImagePreloaderPlugin","errorPrefix","addLoadImageToEngine","engine","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_data$gif","_data$name","image","imageFunc","_data$name2","wrap","_callee$","_context","prev","next","name","src","Error","concat","images","find","t","source","abrupt","gif","type","substring","length","error","loading","replaceColor","ratio","width","height","undefined","push","t0","stop","_x","apply","arguments","loadImageShape","_x2","_loadImageShape","_callee2","refresh","preloader","_args2","_callee2$","_context2","addPlugin","addShape"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-shape-image/esm/index.js"],"sourcesContent":["import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\r\nimport { ImageDrawer } from \"./ImageDrawer\";\r\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\r\nimport { errorPrefix } from \"tsparticles-engine\";\r\nfunction addLoadImageToEngine(engine) {\r\n    if (engine.loadImage) {\r\n        return;\r\n    }\r\n    engine.loadImage = async (data) => {\r\n        if (!data.name && !data.src) {\r\n            throw new Error(`${errorPrefix} no image source provided`);\r\n        }\r\n        if (!engine.images) {\r\n            engine.images = [];\r\n        }\r\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\r\n            return;\r\n        }\r\n        try {\r\n            const image = {\r\n                gif: data.gif ?? false,\r\n                name: data.name ?? data.src,\r\n                source: data.src,\r\n                type: data.src.substring(data.src.length - 3),\r\n                error: false,\r\n                loading: true,\r\n                replaceColor: data.replaceColor,\r\n                ratio: data.width && data.height ? data.width / data.height : undefined,\r\n            };\r\n            engine.images.push(image);\r\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\r\n            await imageFunc(image);\r\n        }\r\n        catch {\r\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\r\n        }\r\n    };\r\n}\r\nexport async function loadImageShape(engine, refresh = true) {\r\n    addLoadImageToEngine(engine);\r\n    const preloader = new ImagePreloaderPlugin(engine);\r\n    await engine.addPlugin(preloader, refresh);\r\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}