{"ast":null,"code":"import _slicedToArray from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport var BounceOutMode = /*#__PURE__*/function () {\n  function BounceOutMode(container) {\n    _classCallCheck(this, BounceOutMode);\n    this.container = container;\n    this.modes = [\"bounce\", \"bounce-vertical\", \"bounce-horizontal\", \"bounceVertical\", \"bounceHorizontal\", \"split\"];\n  }\n  _createClass(BounceOutMode, [{\n    key: \"update\",\n    value: function update(particle, direction, delta, outMode) {\n      if (!this.modes.includes(outMode)) {\n        return;\n      }\n      var container = this.container;\n      var handled = false;\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            plugin = _step$value[1];\n          if (plugin.particleBounce !== undefined) {\n            handled = plugin.particleBounce(particle, delta, direction);\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (handled) {\n        return;\n      }\n      var pos = particle.getPosition(),\n        offset = particle.offset,\n        size = particle.getRadius(),\n        bounds = calculateBounds(pos, size),\n        canvasSize = container.canvas.size;\n      bounceHorizontal({\n        particle: particle,\n        outMode: outMode,\n        direction: direction,\n        bounds: bounds,\n        canvasSize: canvasSize,\n        offset: offset,\n        size: size\n      });\n      bounceVertical({\n        particle: particle,\n        outMode: outMode,\n        direction: direction,\n        bounds: bounds,\n        canvasSize: canvasSize,\n        offset: offset,\n        size: size\n      });\n    }\n  }]);\n  return BounceOutMode;\n}();","map":{"version":3,"names":["calculateBounds","bounceHorizontal","bounceVertical","BounceOutMode","container","_classCallCheck","modes","_createClass","key","value","update","particle","direction","delta","outMode","includes","handled","_iterator","_createForOfIteratorHelper","plugins","_step","s","n","done","_step$value","_slicedToArray","plugin","particleBounce","undefined","err","e","f","pos","getPosition","offset","size","getRadius","bounds","canvasSize","canvas"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js"],"sourcesContent":["import { calculateBounds, } from \"tsparticles-engine\";\r\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\r\nexport class BounceOutMode {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.modes = [\r\n            \"bounce\",\r\n            \"bounce-vertical\",\r\n            \"bounce-horizontal\",\r\n            \"bounceVertical\",\r\n            \"bounceHorizontal\",\r\n            \"split\",\r\n        ];\r\n    }\r\n    update(particle, direction, delta, outMode) {\r\n        if (!this.modes.includes(outMode)) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        let handled = false;\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.particleBounce !== undefined) {\r\n                handled = plugin.particleBounce(particle, delta, direction);\r\n            }\r\n            if (handled) {\r\n                break;\r\n            }\r\n        }\r\n        if (handled) {\r\n            return;\r\n        }\r\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\r\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\r\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\r\n    }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,eAAe,QAAS,oBAAoB;AACrD,SAASC,gBAAgB,EAAEC,cAAc,QAAQ,SAAS;AAC1D,WAAaC,aAAa;EACtB,SAAAA,cAAYC,SAAS,EAAE;IAAAC,eAAA,OAAAF,aAAA;IACnB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,KAAK,GAAG,CACT,QAAQ,EACR,iBAAiB,EACjB,mBAAmB,EACnB,gBAAgB,EAChB,kBAAkB,EAClB,OAAO,CACV;EACL;EAACC,YAAA,CAAAJ,aAAA;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAC,OAAOC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAE;MACxC,IAAI,CAAC,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACD,OAAO,CAAC,EAAE;QAC/B;MACJ;MACA,IAAMV,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIY,OAAO,GAAG,KAAK;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CACKd,SAAS,CAACe,OAAO;QAAAC,KAAA;MAAA;QAA1C,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAA4C;UAAA,IAAAC,WAAA,GAAAC,cAAA,CAAAL,KAAA,CAAAX,KAAA;YAA9BiB,MAAM,GAAAF,WAAA;UAChB,IAAIE,MAAM,CAACC,cAAc,KAAKC,SAAS,EAAE;YACrCZ,OAAO,GAAGU,MAAM,CAACC,cAAc,CAAChB,QAAQ,EAAEE,KAAK,EAAED,SAAS,CAAC;UAC/D;UACA,IAAII,OAAO,EAAE;YACT;UACJ;QACJ;MAAC,SAAAa,GAAA;QAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;MAAA;QAAAZ,SAAA,CAAAc,CAAA;MAAA;MACD,IAAIf,OAAO,EAAE;QACT;MACJ;MACA,IAAMgB,GAAG,GAAGrB,QAAQ,CAACsB,WAAW,CAAC,CAAC;QAAEC,MAAM,GAAGvB,QAAQ,CAACuB,MAAM;QAAEC,IAAI,GAAGxB,QAAQ,CAACyB,SAAS,CAAC,CAAC;QAAEC,MAAM,GAAGrC,eAAe,CAACgC,GAAG,EAAEG,IAAI,CAAC;QAAEG,UAAU,GAAGlC,SAAS,CAACmC,MAAM,CAACJ,IAAI;MAClKlC,gBAAgB,CAAC;QAAEU,QAAQ,EAARA,QAAQ;QAAEG,OAAO,EAAPA,OAAO;QAAEF,SAAS,EAATA,SAAS;QAAEyB,MAAM,EAANA,MAAM;QAAEC,UAAU,EAAVA,UAAU;QAAEJ,MAAM,EAANA,MAAM;QAAEC,IAAI,EAAJA;MAAK,CAAC,CAAC;MACpFjC,cAAc,CAAC;QAAES,QAAQ,EAARA,QAAQ;QAAEG,OAAO,EAAPA,OAAO;QAAEF,SAAS,EAATA,SAAS;QAAEyB,MAAM,EAANA,MAAM;QAAEC,UAAU,EAAVA,UAAU;QAAEJ,MAAM,EAANA,MAAM;QAAEC,IAAI,EAAJA;MAAK,CAAC,CAAC;IACtF;EAAC;EAAA,OAAAhC,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}