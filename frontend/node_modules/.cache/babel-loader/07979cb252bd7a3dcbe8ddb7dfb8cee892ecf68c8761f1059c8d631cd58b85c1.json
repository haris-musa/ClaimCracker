{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport function loadGenericPolygonShape(_x) {\n  return _loadGenericPolygonShape.apply(this, arguments);\n}\nfunction _loadGenericPolygonShape() {\n  _loadGenericPolygonShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var refresh,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          refresh = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;\n          _context.next = 3;\n          return engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadGenericPolygonShape.apply(this, arguments);\n}\nexport function loadTriangleShape(_x2) {\n  return _loadTriangleShape.apply(this, arguments);\n}\nfunction _loadTriangleShape() {\n  _loadTriangleShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(engine) {\n    var refresh,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          refresh = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : true;\n          _context2.next = 3;\n          return engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadTriangleShape.apply(this, arguments);\n}\nexport function loadPolygonShape(_x3) {\n  return _loadPolygonShape.apply(this, arguments);\n}\nfunction _loadPolygonShape() {\n  _loadPolygonShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(engine) {\n    var refresh,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          refresh = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : true;\n          _context3.next = 3;\n          return loadGenericPolygonShape(engine, refresh);\n        case 3:\n          _context3.next = 5;\n          return loadTriangleShape(engine, refresh);\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _loadPolygonShape.apply(this, arguments);\n}","map":{"version":3,"names":["PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","_x","_loadGenericPolygonShape","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","engine","refresh","_args","wrap","_callee$","_context","prev","next","length","undefined","addShape","stop","loadTriangleShape","_x2","_loadTriangleShape","_callee2","_args2","_callee2$","_context2","loadPolygonShape","_x3","_loadPolygonShape","_callee3","_args3","_callee3$","_context3"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-shape-polygon/esm/index.js"],"sourcesContent":["import { PolygonDrawer } from \"./PolygonDrawer\";\r\nimport { TriangleDrawer } from \"./TriangleDrawer\";\r\nexport async function loadGenericPolygonShape(engine, refresh = true) {\r\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\r\n}\r\nexport async function loadTriangleShape(engine, refresh = true) {\r\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\r\n}\r\nexport async function loadPolygonShape(engine, refresh = true) {\r\n    await loadGenericPolygonShape(engine, refresh);\r\n    await loadTriangleShape(engine, refresh);\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,gBAAsBC,uBAAuBA,CAAAC,EAAA;EAAA,OAAAC,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAE5C,SAAAF,yBAAA;EAAAA,wBAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAFM,SAAAC,QAAuCC,MAAM;IAAA,IAAAC,OAAA;MAAAC,KAAA,GAAAP,SAAA;IAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAEN,OAAO,GAAAC,KAAA,CAAAM,MAAA,QAAAN,KAAA,QAAAO,SAAA,GAAAP,KAAA,MAAG,IAAI;UAAAG,QAAA,CAAAE,IAAA;UAAA,OAC1DP,MAAM,CAACU,QAAQ,CAAC,SAAS,EAAE,IAAIrB,aAAa,CAAC,CAAC,EAAEY,OAAO,CAAC;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAM,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CACjE;EAAA,OAAAN,wBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsBiB,iBAAiBA,CAAAC,GAAA;EAAA,OAAAC,kBAAA,CAAApB,KAAA,OAAAC,SAAA;AAAA;AAEtC,SAAAmB,mBAAA;EAAAA,kBAAA,GAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAFM,SAAAiB,SAAiCf,MAAM;IAAA,IAAAC,OAAA;MAAAe,MAAA,GAAArB,SAAA;IAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAc,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;QAAA;UAAEN,OAAO,GAAAe,MAAA,CAAAR,MAAA,QAAAQ,MAAA,QAAAP,SAAA,GAAAO,MAAA,MAAG,IAAI;UAAAE,SAAA,CAAAX,IAAA;UAAA,OACpDP,MAAM,CAACU,QAAQ,CAAC,UAAU,EAAE,IAAIpB,cAAc,CAAC,CAAC,EAAEW,OAAO,CAAC;QAAA;QAAA;UAAA,OAAAiB,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CACnE;EAAA,OAAAD,kBAAA,CAAApB,KAAA,OAAAC,SAAA;AAAA;AACD,gBAAsBwB,gBAAgBA,CAAAC,GAAA;EAAA,OAAAC,iBAAA,CAAA3B,KAAA,OAAAC,SAAA;AAAA;AAGrC,SAAA0B,kBAAA;EAAAA,iBAAA,GAAAzB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAHM,SAAAwB,SAAgCtB,MAAM;IAAA,IAAAC,OAAA;MAAAsB,MAAA,GAAA5B,SAAA;IAAA,OAAAE,mBAAA,GAAAM,IAAA,UAAAqB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAnB,IAAA,GAAAmB,SAAA,CAAAlB,IAAA;QAAA;UAAEN,OAAO,GAAAsB,MAAA,CAAAf,MAAA,QAAAe,MAAA,QAAAd,SAAA,GAAAc,MAAA,MAAG,IAAI;UAAAE,SAAA,CAAAlB,IAAA;UAAA,OACnDhB,uBAAuB,CAACS,MAAM,EAAEC,OAAO,CAAC;QAAA;UAAAwB,SAAA,CAAAlB,IAAA;UAAA,OACxCK,iBAAiB,CAACZ,MAAM,EAAEC,OAAO,CAAC;QAAA;QAAA;UAAA,OAAAwB,SAAA,CAAAd,IAAA;MAAA;IAAA,GAAAW,QAAA;EAAA,CAC3C;EAAA,OAAAD,iBAAA,CAAA3B,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}