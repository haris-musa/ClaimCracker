{"ast":null,"code":"import _classCallCheck from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport var Circle = /*#__PURE__*/function (_Range) {\n  _inherits(Circle, _Range);\n  var _super = _createSuper(Circle);\n  function Circle(x, y, radius) {\n    var _this;\n    _classCallCheck(this, Circle);\n    _this = _super.call(this, x, y);\n    _this.radius = radius;\n    return _this;\n  }\n  _createClass(Circle, [{\n    key: \"contains\",\n    value: function contains(point) {\n      return getDistance(point, this.position) <= this.radius;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      var pos1 = this.position,\n        pos2 = range.position,\n        distPos = {\n          x: Math.abs(pos2.x - pos1.x),\n          y: Math.abs(pos2.y - pos1.y)\n        },\n        r = this.radius;\n      if (range instanceof Circle) {\n        var rSum = r + range.radius,\n          dist = Math.sqrt(Math.pow(distPos.x, 2) + Math.pow(distPos.y, 2));\n        return rSum > dist;\n      } else if (range instanceof Rectangle) {\n        var _range$size = range.size,\n          width = _range$size.width,\n          height = _range$size.height,\n          edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n        return edges <= Math.pow(r, 2) || distPos.x <= r + width && distPos.y <= r + height || distPos.x <= width || distPos.y <= height;\n      }\n      return false;\n    }\n  }]);\n  return Circle;\n}(Range);","map":{"version":3,"names":["Range","Rectangle","getDistance","Circle","_Range","_inherits","_super","_createSuper","x","y","radius","_this","_classCallCheck","call","_createClass","key","value","contains","point","position","intersects","range","pos1","pos2","distPos","Math","abs","r","rSum","dist","sqrt","pow","_range$size","size","width","height","edges"],"sources":["C:/Users/Administrator/Documents/ClaimCracker-1.0/ClaimCracker/frontend/node_modules/tsparticles-engine/esm/Core/Utils/Circle.js"],"sourcesContent":["import { Range } from \"./Range\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { getDistance } from \"../../Utils/NumberUtils\";\r\nexport class Circle extends Range {\r\n    constructor(x, y, radius) {\r\n        super(x, y);\r\n        this.radius = radius;\r\n    }\r\n    contains(point) {\r\n        return getDistance(point, this.position) <= this.radius;\r\n    }\r\n    intersects(range) {\r\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\r\n        if (range instanceof Circle) {\r\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\r\n            return rSum > dist;\r\n        }\r\n        else if (range instanceof Rectangle) {\r\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\r\n            return (edges <= r ** 2 ||\r\n                (distPos.x <= r + width && distPos.y <= r + height) ||\r\n                distPos.x <= width ||\r\n                distPos.y <= height);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"],"mappings":";;;;AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,WAAaC,MAAM,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,MAAA;EACf,SAAAA,OAAYK,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,MAAA;IACtBQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAML,CAAC,EAAEC,CAAC;IACVE,KAAA,CAAKD,MAAM,GAAGA,MAAM;IAAC,OAAAC,KAAA;EACzB;EAACG,YAAA,CAAAX,MAAA;IAAAY,GAAA;IAAAC,KAAA,EACD,SAAAC,SAASC,KAAK,EAAE;MACZ,OAAOhB,WAAW,CAACgB,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,IAAI,IAAI,CAACT,MAAM;IAC3D;EAAC;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAI,WAAWC,KAAK,EAAE;MACd,IAAMC,IAAI,GAAG,IAAI,CAACH,QAAQ;QAAEI,IAAI,GAAGF,KAAK,CAACF,QAAQ;QAAEK,OAAO,GAAG;UAAEhB,CAAC,EAAEiB,IAAI,CAACC,GAAG,CAACH,IAAI,CAACf,CAAC,GAAGc,IAAI,CAACd,CAAC,CAAC;UAAEC,CAAC,EAAEgB,IAAI,CAACC,GAAG,CAACH,IAAI,CAACd,CAAC,GAAGa,IAAI,CAACb,CAAC;QAAE,CAAC;QAAEkB,CAAC,GAAG,IAAI,CAACjB,MAAM;MAC5I,IAAIW,KAAK,YAAYlB,MAAM,EAAE;QACzB,IAAMyB,IAAI,GAAGD,CAAC,GAAGN,KAAK,CAACX,MAAM;UAAEmB,IAAI,GAAGJ,IAAI,CAACK,IAAI,CAACL,IAAA,CAAAM,GAAA,CAAAP,OAAO,CAAChB,CAAC,EAAI,CAAC,IAAAiB,IAAA,CAAAM,GAAA,CAAGP,OAAO,CAACf,CAAC,EAAI,CAAC,EAAC;QAChF,OAAOmB,IAAI,GAAGC,IAAI;MACtB,CAAC,MACI,IAAIR,KAAK,YAAYpB,SAAS,EAAE;QACjC,IAAA+B,WAAA,GAA0BX,KAAK,CAACY,IAAI;UAA5BC,KAAK,GAAAF,WAAA,CAALE,KAAK;UAAEC,MAAM,GAAAH,WAAA,CAANG,MAAM;UAAiBC,KAAK,GAAGX,IAAI,CAACM,GAAG,CAACP,OAAO,CAAChB,CAAC,GAAG0B,KAAK,EAAE,CAAC,CAAC,GAAGT,IAAI,CAACM,GAAG,CAACP,OAAO,CAACf,CAAC,GAAG0B,MAAM,EAAE,CAAC,CAAC;QAC9G,OAAQC,KAAK,IAAAX,IAAA,CAAAM,GAAA,CAAIJ,CAAC,EAAI,CAAC,KAClBH,OAAO,CAAChB,CAAC,IAAImB,CAAC,GAAGO,KAAK,IAAIV,OAAO,CAACf,CAAC,IAAIkB,CAAC,GAAGQ,MAAO,IACnDX,OAAO,CAAChB,CAAC,IAAI0B,KAAK,IAClBV,OAAO,CAACf,CAAC,IAAI0B,MAAM;MAC3B;MACA,OAAO,KAAK;IAChB;EAAC;EAAA,OAAAhC,MAAA;AAAA,EAtBuBH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}